# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python
# https://docs.microsoft.com/en-us/azure/devops/pipelines/process/conditions?view=azure-devops&tabs=yaml
# https://elanderson.net/2020/05/azure-devops-pipelines-depends-on-with-conditionals-in-yaml/
name: $(build.sourceBranchName)-$(Date:yyyyMMdd)$(Rev:.r)

trigger:
  branches:
    include: 
    - development
    - releases/*
    - hf/*
  paths:
    exclude: 
    # Exclude README.md from triggering content deployments
    - README.md
    # Include tags for CI
  tags:
    include:
    - '*'

# PR for the below target branches triggers linting and 
pr:
  branches:
    include:
    - develop
    - releases/*
    - hf/*

variables:
  isdevelop: $[contains(variables['Build.SourceBranch'], 'develop')]
  isreleasealpha: $[and(contains(variables['build.sourceBranch'], 'refs/heads'), contains(variables['build.sourceBranch'], '-alpha'))]
  isreleasebeta: $[and(contains(variables['build.sourceBranch'], 'refs/heads'), contains(variables['build.sourceBranch'], '-beta'))]
  isreleaserc: $[and(contains(variables['build.sourceBranch'], 'refs/heads'), contains(variables['build.sourceBranch'], '-rc'))]
  istagalpha: $[and(contains(variables['build.sourceBranch'], 'refs/tags'), contains(variables['build.sourceBranch'], '-alpha'))]
  istagbeta: $[and(contains(variables['build.sourceBranch'], 'refs/tags'), contains(variables['build.sourceBranch'], '-beta'))]
  istagrc: $[and(contains(variables['build.sourceBranch'], 'refs/tags'), contains(variables['build.sourceBranch'], '-rc'))]
  isanypr: $[contains(variables['Build.SourceBranch'], 'merge')]
  isanyrelease: $[contains(variables['Build.SourceBranch'], 'releases/')]
  isanytag: $[contains(variables['Build.SourceBranch'], 'tag')]
  
pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: BuildAndDeploy

  jobs:
  - job: RunLint
    displayName: Run Lint - QC Checks
    condition: and(succeeded(), or(eq(variables['isanypr'], true),eq(variables['isanytag'], true))) 
    steps:
         - script: echo Run Lint - QC Checks
  - job: PublishPipelineArtifact
    displayName: Git pull and make files available to pipeline process
    # PublishPipelineArtifact task packages source code and makes it available at $(System.ArtifactsDirectory)/product-pipeline-artifact
    # Checkout set to none for all jobs afer this
    steps:
       - task: CopyFiles@2
         inputs:
           SourceFolder: '$(Build.SourcesDirectory)'
           contents: |
             src/**
             test/**
             requirements.txt
           targetFolder: $(Build.ArtifactStagingDirectory)
       - task: PublishPipelineArtifact@1
         inputs:
           path: $(Build.ArtifactStagingDirectory)
           artifact: product-pipeline-artifact
  - job: BuildDocs
    displayName: Build Docs
    dependsOn: PublishPipelineArtifact
    steps:
      - checkout: none
      - script: echo Build Docs
  - job: BuildCondaEnv
    displayName: Build Conda Env
    steps:
      - checkout: none
      - script: echo Build Conda Env
  - job: BuildTestsZip
    displayName: Build Tests Zip
    dependsOn: PublishPipelineArtifact
    condition: and(succeeded(), or(eq(variables['isreleasealpha'], true),eq(variables['isreleasebeta'], true),eq(variables['isreleaserc'], true)))
    steps:
      - checkout: none
      - script: echo Unit Test
  - job: TestRun
    dependsOn: PublishPipelineArtifact
    condition: and(succeeded(), or(eq(variables['isreleasebeta'], true),eq(variables['isreleaserc'], true)))
    steps:
      - checkout: none
      - script: echo Test Run
  - job: AcceptanceTest
    dependsOn: PublishPipelineArtifact
    condition: and(succeeded(), eq(variables['isreleaserc'], true))
    steps:
      - checkout: none
      - script: echo Acceptance Test
  - job: DistributionArchive
    steps:
      - checkout: none
      - script: echo DistributionArchive



