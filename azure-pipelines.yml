# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python
# https://docs.microsoft.com/en-us/azure/devops/pipelines/process/conditions?view=azure-devops&tabs=yaml
# https://docs.microsoft.com/en-us/azure/devops/pipelines/build/variables?view=azure-devops&tabs=yaml
# Test
name: $(build.sourceBranch)-$(Date:yyyyMMdd)$(Rev:.r)

trigger:
  branches:
    include: 
    - trial

 
  
pool:
  vmImage: 'ubuntu-latest'

variables:
  isdevelop: $[contains(variables['Build.SourceBranch'], 'develop')]
  ishotfix: $[contains(variables['Build.SourceBranch'], 'hotfix/')]
  isanyrelease: $[contains(variables['Build.SourceBranch'], 'releases/')]
  isanytag: $[contains(variables['Build.SourceBranch'], 'tag')]
  isanypr: $[contains(variables['Build.SourceBranch'], 'merge')]
  isreleasealpha: $[and(contains(variables['build.sourceBranch'], 'refs/heads'), contains(variables['build.sourceBranch'], '-alpha'))]
  isreleasebeta: $[and(contains(variables['build.sourceBranch'], 'refs/heads'), contains(variables['build.sourceBranch'], '-beta'))]
  isreleaserc: $[and(contains(variables['build.sourceBranch'], 'refs/heads'), contains(variables['build.sourceBranch'], '-rc'))]
  istagalpha: $[and(contains(variables['build.sourceBranch'], 'refs/tags'), contains(variables['build.sourceBranch'], '-alpha'))]
  istagbeta: $[and(contains(variables['build.sourceBranch'], 'refs/tags'), contains(variables['build.sourceBranch'], '-beta'))]
  istagrc: $[and(contains(variables['build.sourceBranch'], 'refs/tags'), contains(variables['build.sourceBranch'], '-rc'))]
  isprtargetdevelop: $[and(contains(variables['build.sourceBranch'], 'merge'), contains(variables['System.PullRequest.TargetBranch'], 'develop'))]
  isprtargethotfix: $[and(contains(variables['build.sourceBranch'], 'merge'), contains(variables['System.PullRequest.TargetBranch'], 'hotfixes/'))]
  isprtargetrelalpha: $[and(contains(variables['build.sourceBranch'], 'merge'), contains(variables['System.PullRequest.TargetBranch'], '-alpha'))]
  isprtargetrelbeta: $[and(contains(variables['build.sourceBranch'], 'merge'), contains(variables['System.PullRequest.TargetBranch'], '-beta'))]
  isprtargetrelrc: $[and(contains(variables['build.sourceBranch'], 'merge'), contains(variables['System.PullRequest.TargetBranch'], '-rc'))]
  ${{if eq(variables['isanytag'], false)}}:
    version_string: $[Build.SourceVersion]
  ${{if eq(variables['isanytag'], true)}}:
    version_string: $[Build.SourceBranchName]

stages:
- stage: CICD 
  displayName: ->

  jobs:

 
  - job: DeliverDockerImage
    displayName: Deliver Docker Image
    steps:
      - checkout: none
      - script: echo $(dependencies)

  - job: DeliverDockerImage1
    displayName: Deliver Docker Image1
    condition: and(succeeded(), eq(1, 2))
    steps:
      - checkout: none
      - script: echo Deliver Docker Image  1
      
  - job: BuildProjectSite
    displayName: Build Project Site
    dependsOn:
     - DeliverDockerImage1
    condition: |
     and( eq(1, 1),
           ne(dependencies.DeliverDockerImage.result, 'Succeeded'))
               
    steps:
      - checkout: none
      - script: echo $(dependencies)
