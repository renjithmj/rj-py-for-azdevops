# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

name: $(build.sourceBranchName)-$(Date:yyyyMMdd)$(Rev:.r)

trigger:
  batch: true
  branches:
    include: 
    - develop
    - release-1.1.0-alpha
    - release-1.1.0-beta
  paths:
    exclude: 
    # Exclude README.md from triggering content deployments
    # Exclude the app folder from triggering content deployments, since it isn't included in the Dockerfile anyway
    - README.md

# no PR builds
pr: none

resources:
- repo: self

variables:
  isdevelop: $[eq(variables['Build.SourceBranch'], 'refs/heads/develop')]
  isreleasealpha: $[eq(variables['Build.SourceBranch'], 'refs/heads/release-1.1.0-alpha')]
  isreleasebeta: $[eq(variables['Build.SourceBranch'], 'refs/heads/release-1.1.0-beta')]
  
  
pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: A
  condition: and(succeeded(), eq(variables.isdevelop, true)) 	
  jobs:
  - job: A1
    steps:
      - script: echo Hello Stage A!
      - script: echo $(variables.isdevelop)

- stage: B
  condition: and(succeeded(), eq(variables.isreleasealpha, true))
  jobs:
  - job: B1
    steps:
      - script: echo Hello Stage B!
      - script: echo $(variables.isreleasealpha)

- stage: C
  condition: and(succeeded(), eq(variables.isreleasebeta, true))
  jobs:
  - job: C1
    steps:
      - script: echo Hello Stage C!
      - script: echo $(variables.isreleasebeta)
