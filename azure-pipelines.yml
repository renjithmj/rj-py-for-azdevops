# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python
# https://docs.microsoft.com/en-us/azure/devops/pipelines/process/conditions?view=azure-devops&tabs=yaml
# https://docs.microsoft.com/en-us/azure/devops/pipelines/build/variables?view=azure-devops&tabs=yaml
# Test
name: $(build.sourceBranch)-$(Date:yyyyMMdd)$(Rev:.r)

trigger:
  branches:
    include: 
    - develop
    - releases/*
    - trial

  paths:
    exclude: 
    # Exclude README.md from triggering content deployments
    - README.md
    # Include tags for CI
  tags:
    include:
    - '*'

# PR for the below target branches triggers linting and few other steps   
# https://docs.microsoft.com/en-us/azure/devops/pipelines/repos/azure-repos-git?view=azure-devops&tabs=yaml#pr-triggers
#PR trigger doesnt work for Azure Repos unless the branch policies for each branch is set
pr:
  branches:
    include:
    - develop
    - releases/*
    - hotfixes/*

variables:
  isdevelop: $[contains(variables['Build.SourceBranch'], 'develop')]
  ishotfix: $[contains(variables['Build.SourceBranch'], 'hotfixes')]
  isanyrelease: $[contains(variables['Build.SourceBranch'], 'releases')]
  isanytag: $[contains(variables['Build.SourceBranch'], 'refs/tags')]
  istagalpha: $[and(contains(variables['build.sourceBranch'], 'refs/tags'), contains(variables['build.sourceBranch'], '-alpha'))]
  istagbeta: $[and(contains(variables['build.sourceBranch'], 'refs/tags'), contains(variables['build.sourceBranch'], '-beta'))]
  istagrc: $[and(contains(variables['build.sourceBranch'], 'refs/tags'), contains(variables['build.sourceBranch'], '-rc'))]
  istagOther: $[and(eq(variables['isanytag'], true),eq(variables['istagalpha'], false),eq(variables['istagbeta'], false),eq(variables['istagrc'], false))]

  
pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: CICD 
  displayName: ->

  jobs:

 
  - job: DeliverDockerImage
    displayName: Deliver Docker Image
    dependsOn: 
    steps:
      - checkout: none
      - script: echo Deliver Docker Image  
      
  - job: BuildProjectSite
    displayName: Build Project Site
    dependsOn: 
    - DeliverDockerImage
    condition: and(succeeded(), eq(dependencies.RunFunctionalTest.result, 'Succeeded')),
               
    steps:
      - checkout: none
      - script: echo $(dependencies.RunFunctionalTest.result)
