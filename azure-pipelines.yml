# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python
# https://docs.microsoft.com/en-us/azure/devops/pipelines/process/conditions?view=azure-devops&tabs=yaml
# https://elanderson.net/2020/05/azure-devops-pipelines-depends-on-with-conditionals-in-yaml/
name: $(build.sourceBranchName)-$(Date:yyyyMMdd)$(Rev:.r)

trigger:
  branches:
    include: 
    - develop
    - releases/*
    - hf/*
    - trial
  paths:
    exclude: 
    # Exclude README.md from triggering content deployments
    - README.md
    # Include tags for CI
  tags:
    include:
    - '*'

# PR for the below target branches triggers linting and 
pr:
  branches:
    include:
    - develop
    - trial
    - releases/*
    - hf/*

variables:
  istrial1: $[contains(variables['Build.SourceBranch'], 'trial')]
  isdevelop: $[contains(variables['Build.SourceBranch'], 'develop')]
  isalpha: $[contains(variables['Build.SourceBranch'], '-alpha')]
  isanybranch: $[contains(variables['Build.SourceBranch'], 'refs/heads')]
  istrial3: $[and(contains(variables['build.sourceBranch'], 'refs/head'), contains(variables['build.sourceBranch'], 'trial'))]
  isprtargettrial: $[and(contains(variables['build.sourceBranch'], 'merge'), contains(variables['build.sourceBranch'], 'trial'))]
  
pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: BuildAndDeploy

  jobs:
  - job: RunLint
    displayName: Run Lint - QC Checks
    steps:
       - task: Bash@3
         inputs:
           targetType: 'inline'
           script: |
             echo $(istrial1)
             echo $(istrial2)
             echo $(istrial3)
             echo $(isprtargettrial)
  
  - job: tester
    displayName: Tester
    condition: and(succeeded(), or(eq(variables['develop'], true),
                  and(eq(variables['isanybranch'], true),ne(variables['isdevelop'], true),ne(variables['isalpha'], true)))) 
    steps:
       - task: Bash@3
         inputs:
           targetType: 'inline'
           script: |
             echo This works!!


